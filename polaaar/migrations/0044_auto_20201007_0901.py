# Generated by Django 2.2.14 on 2020-10-07 09:01

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('polaaar', '0043_projectmetadata_project_creator'),
    ]

    operations = [
        migrations.AlterField(
            model_name='environment',
            name='created_at',
            field=models.DateField(help_text='The date on which the resource created recommended best practice is to use an encoding scheme; such as ISO 8601:2004(E)'),
        ),
        migrations.AlterField(
            model_name='environment',
            name='env_method',
            field=models.ForeignKey(blank=True, help_text='Foreign key to sampling_method table', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='polaaar.sampling_method'),
        ),
        migrations.AlterField(
            model_name='environment',
            name='env_numeric_value',
            field=models.DecimalField(blank=True, decimal_places=5, help_text='http://rs.tdwg.org/dwc/terms/measurementValue', max_digits=25, null=True),
        ),
        migrations.AlterField(
            model_name='environment',
            name='env_sample_name',
            field=models.CharField(blank=True, help_text='The original sample name that can be used to identify the material taken in the field.', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='environment',
            name='env_text_value',
            field=models.CharField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/measurementValue', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='environment',
            name='env_units',
            field=models.ForeignKey(blank=True, help_text='Foreign key to Units table', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='polaaar.units'),
        ),
        migrations.AlterField(
            model_name='environment',
            name='env_variable',
            field=models.ForeignKey(help_text='Foreign key to Variable table', on_delete=django.db.models.deletion.DO_NOTHING, to='polaaar.Variable'),
        ),
        migrations.AlterField(
            model_name='environment',
            name='event',
            field=models.ForeignKey(blank=True, help_text='Foreign key to Event table', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='environment', to='polaaar.Event'),
        ),
        migrations.AlterField(
            model_name='environment',
            name='link_climate_info',
            field=models.URLField(blank=True, help_text='link to climate resource', null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='Latitude',
            field=models.DecimalField(blank=True, decimal_places=5, help_text='http://rs.tdwg.org/dwc/terms/decimalLatitude', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='Longitude',
            field=models.DecimalField(blank=True, decimal_places=5, help_text='http://rs.tdwg.org/dwc/terms/decimalLongitude', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='collection_day',
            field=models.IntegerField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/day', null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='collection_month',
            field=models.IntegerField(blank=True, choices=[(1, '01'), (2, '02'), (3, '03'), (4, '04'), (5, '05'), (6, '06'), (7, '07'), (8, '08'), (9, '09'), (10, '10'), (11, '11'), (12, '12')], help_text='http://rs.tdwg.org/dwc/terms/month', null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='collection_time',
            field=models.TimeField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/eventTime', null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='collection_year',
            field=models.IntegerField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/year', null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='environment_exists',
            field=models.BooleanField(blank=True, help_text='Whether or not there is Environment associated to this Event record', null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='eventRemarks',
            field=models.TextField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/eventRemarks', null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='event_hierarchy',
            field=models.ForeignKey(help_text='Foreign key to EventHierarchy record', on_delete=django.db.models.deletion.CASCADE, related_name='event', to='polaaar.EventHierarchy'),
        ),
        migrations.AlterField(
            model_name='event',
            name='event_metadata',
            field=models.ForeignKey(blank=True, help_text='Foreign key to SampleMetadata table', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_sample_metadata', to='polaaar.SampleMetadata'),
        ),
        migrations.AlterField(
            model_name='event',
            name='footprintWKT',
            field=django.contrib.gis.db.models.fields.GeometryField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/footprintWKT', null=True, srid=4326),
        ),
        migrations.AlterField(
            model_name='event',
            name='metadata_exists',
            field=models.BooleanField(blank=True, help_text='Whether or not there is SampleMetadata associated to this Event record', null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='occurrence_exists',
            field=models.BooleanField(blank=True, help_text='Whether or not there is Occurrence associated to this Event record', null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='parent_event',
            field=models.ForeignKey(blank=True, help_text='Foreign key to a (parent) Event table', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='polaaar.Event'),
        ),
        migrations.AlterField(
            model_name='event',
            name='sample_name',
            field=models.CharField(blank=True, help_text='The original sample name that can be used to identify the material taken in the field.', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='samplingProtocol',
            field=models.TextField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/samplingProtocol', null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='sequences_exists',
            field=models.BooleanField(blank=True, help_text='Whether or not there is Sequence associated to this Event record', null=True),
        ),
        migrations.AlterField(
            model_name='eventhierarchy',
            name='created_on',
            field=models.DateField(help_text='The date on which the resource created recommended best practice is to use an encoding scheme; such as ISO 8601:2004(E)'),
        ),
        migrations.AlterField(
            model_name='eventhierarchy',
            name='description',
            field=models.TextField(blank=True, help_text='A description of the sample as it was taken from the natural environment', null=True),
        ),
        migrations.AlterField(
            model_name='eventhierarchy',
            name='event_creator',
            field=models.ForeignKey(help_text='The user who created this record', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='eventhierarchy',
            name='event_hierarchy_name',
            field=models.CharField(blank=True, help_text='The original sample name that can be used to identify the material taken in the field.', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='eventhierarchy',
            name='event_type',
            field=models.ForeignKey(help_text='Foreign key to EventType table', on_delete=django.db.models.deletion.DO_NOTHING, related_name='eventtype', to='polaaar.EventType'),
        ),
        migrations.AlterField(
            model_name='eventhierarchy',
            name='parent_event_hierarchy',
            field=models.ForeignKey(blank=True, help_text='Foreign key to EventHierarchy table', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='EventRank', to='polaaar.EventHierarchy'),
        ),
        migrations.AlterField(
            model_name='eventhierarchy',
            name='updated_on',
            field=models.DateField(auto_now=True, help_text='The most recent date on which the resource was changed'),
        ),
        migrations.AlterField(
            model_name='eventtype',
            name='name',
            field=models.CharField(blank=True, help_text='The name and subject or a record (line) in a table', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='geog_location',
            name='geog_level',
            field=models.CharField(choices=[('continent', 'continent'), ('waterBody', 'waterBody'), ('country', 'country'), ('islandGroup', 'islandGroup'), ('island', 'island'), ('stateProvince', 'stateProvince'), ('county', 'county'), ('municipality', 'municipality'), ('locality', 'locality')], help_text='A level indicating the geographical scale or a geographic name (e.g. continent; country; province; city)', max_length=300),
        ),
        migrations.AlterField(
            model_name='geog_location',
            name='name',
            field=models.CharField(blank=True, help_text='The name and subject or a record (line) in a table', max_length=300, null=True),
        ),
        migrations.AlterField(
            model_name='geog_location',
            name='parent_geog',
            field=models.ForeignKey(blank=True, help_text='Foreign key to (parent) Geog_Location table', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='GeogName', to='polaaar.Geog_Location'),
        ),
        migrations.AlterField(
            model_name='occurrence',
            name='associated_sequences',
            field=models.ManyToManyField(blank=True, help_text='Many to many relationship with Sequence. Sequence(s) associated to this Occurrence record.', to='polaaar.Sequences'),
        ),
        migrations.AlterField(
            model_name='occurrence',
            name='catalog_number',
            field=models.CharField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/catalogNumber', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='occurrence',
            name='date_identified',
            field=models.DateField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/dateIdentified', null=True),
        ),
        migrations.AlterField(
            model_name='occurrence',
            name='event',
            field=models.ForeignKey(blank=True, help_text='Foreign key to Event table', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='occurrence', to='polaaar.Event'),
        ),
        migrations.AlterField(
            model_name='occurrence',
            name='occurrenceID',
            field=models.CharField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/occurrenceID', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='occurrence',
            name='occurrence_class',
            field=models.TextField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/basisOfRecord', null=True),
        ),
        migrations.AlterField(
            model_name='occurrence',
            name='occurrence_notes',
            field=models.TextField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/occurrenceRemarks', null=True),
        ),
        migrations.AlterField(
            model_name='occurrence',
            name='occurrence_status',
            field=models.TextField(blank=True, help_text='http://rs.tdwg.org/dwc/iri/occurrenceStatus', null=True),
        ),
        migrations.AlterField(
            model_name='occurrence',
            name='other_catalog_numbers',
            field=models.TextField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/otherCatalogNumbers', null=True),
        ),
        migrations.AlterField(
            model_name='occurrence',
            name='recorded_by',
            field=models.TextField(blank=True, help_text='http://rs.tdwg.org/dwc/iri/recordedBy', null=True),
        ),
        migrations.AlterField(
            model_name='occurrence',
            name='taxon',
            field=models.ForeignKey(help_text='Foreign key to Taxa table', on_delete=django.db.models.deletion.DO_NOTHING, related_name='occurrence', to='polaaar.Taxa'),
        ),
        migrations.AlterField(
            model_name='package',
            name='name',
            field=models.CharField(blank=True, help_text='The name and subject or a record (line) in a table', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='projectfiles',
            name='files',
            field=models.FileField(blank=True, help_text='Raw data files', null=True, upload_to='polaaar/project_files/'),
        ),
        migrations.AlterField(
            model_name='projectfiles',
            name='project',
            field=models.ForeignKey(blank=True, help_text='Foreign key to ProjectMetadata table', null=True, on_delete=django.db.models.deletion.CASCADE, to='polaaar.ProjectMetadata'),
        ),
        migrations.AlterField(
            model_name='projectmetadata',
            name='EML_URL',
            field=models.URLField(blank=True, help_text="The url of to the project metadata's EML file on the IPT or GBIF", null=True),
        ),
        migrations.AlterField(
            model_name='projectmetadata',
            name='abstract',
            field=models.TextField(blank=True, help_text='https://eml.ecoinformatics.org/schema/eml-resource_xsd.html#ResourceGroup_abstract', null=True),
        ),
        migrations.AlterField(
            model_name='projectmetadata',
            name='associated_media',
            field=models.TextField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/associatedReferences', null=True),
        ),
        migrations.AlterField(
            model_name='projectmetadata',
            name='created_on',
            field=models.DateField(help_text='The date on which the resource created recommended best practice is to use an encoding scheme; such as ISO 8601:2004(E)'),
        ),
        migrations.AlterField(
            model_name='projectmetadata',
            name='end_date',
            field=models.DateField(blank=True, help_text='End date of the project', null=True),
        ),
        migrations.AlterField(
            model_name='projectmetadata',
            name='geomet',
            field=django.contrib.gis.db.models.fields.PolygonField(blank=True, help_text='https://eml.ecoinformatics.org/schema/eml-coverage_xsd.html#GeographicCoverage_boundingCoordinates', null=True, srid=4326),
        ),
        migrations.AlterField(
            model_name='projectmetadata',
            name='is_public',
            field=models.BooleanField(help_text='Whether a the data of a project is public or embargoed'),
        ),
        migrations.AlterField(
            model_name='projectmetadata',
            name='project_contact',
            field=models.TextField(blank=True, help_text='https://eml.ecoinformatics.org/schema/eml-dataset_xsd.html#DatasetType_contact', null=True),
        ),
        migrations.AlterField(
            model_name='projectmetadata',
            name='project_creator',
            field=models.ForeignKey(blank=True, help_text='The user who created this record.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='projectmetadata',
            name='project_name',
            field=models.CharField(blank=True, help_text='Name of the project within which the sequencing was organized', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='projectmetadata',
            name='project_qaqc',
            field=models.BooleanField(blank=True, help_text='Whether or not a dataset has been Quality Controlled', null=True),
        ),
        migrations.AlterField(
            model_name='projectmetadata',
            name='resource_url',
            field=models.TextField(blank=True, help_text='Resource link of this dataset, preferrably points to EML resource page', null=True),
        ),
        migrations.AlterField(
            model_name='projectmetadata',
            name='start_date',
            field=models.DateField(blank=True, help_text='Start date of the project', null=True),
        ),
        migrations.AlterField(
            model_name='projectmetadata',
            name='updated_on',
            field=models.DateField(auto_now=True, help_text='The most recent date on which the resource was changed.'),
        ),
        migrations.AlterField(
            model_name='reference',
            name='associated_projects',
            field=models.ManyToManyField(blank=True, help_text='Foreign key to the ProjectMetadata table', related_name='associated_references', to='polaaar.ProjectMetadata'),
        ),
        migrations.AlterField(
            model_name='reference',
            name='doi',
            field=models.CharField(blank=True, help_text='doi of the literature related / used in the dataset', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='reference',
            name='full_reference',
            field=models.TextField(help_text='Citation that form a bibliography on literature related / used in the dataset'),
        ),
        migrations.AlterField(
            model_name='reference',
            name='year',
            field=models.IntegerField(help_text='The year of the literature related / used in the dataset'),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='additional_information',
            field=models.TextField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/eventRemarks', null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='env_biome',
            field=models.CharField(blank=True, help_text='Biomes are defined based on factors such as plant structures; leaf types; plant spacing; and other factors like climate. Biome should be treated as the descriptor of the broad ecological context of a sample. Examples include: desert; taiga; deciduous woodland; or coral reef. EnvO (v 2013-06-14) terms can be found via the link: www.environmentontology.org/Browse-EnvO', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='env_feature',
            field=models.CharField(blank=True, help_text='Environmental feature level includes geographic environmental features. Compared to biome; feature is a descriptor of the more local environment. Examples include: harbor; cliff; or lake. EnvO (v 2013-06-14) terms can be found via the link: www.environmentontology.org/Browse-EnvO', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='env_material',
            field=models.CharField(blank=True, help_text='The environmental material level refers to the material that was displaced by the sample; or material in which a sample was embedded; prior to the sampling event. Environmental material terms are generally mass nouns. Examples include: air; soil; or water. EnvO (v 2013-06-14) terms can be found via the link: www.environmentontology.org/Browse-EnvO', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='env_package',
            field=models.ForeignKey(blank=True, help_text='Foreign key to Package table', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='polaaar.package'),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='environment',
            field=models.ManyToManyField(blank=True, help_text='Environment record(s) associated to this record', to='polaaar.Environment'),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='geo_loc_name',
            field=models.CharField(blank=True, help_text='The geographical origin of the sample as defined by the country or sea name followed by specific region name. Country or sea names should be chosen from the INSDC country list (http://insdc.org/country.html); or the GAZ ontology (v 1.512) (http://purl.bioontology.org/ontology/GAZ)', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='geographic_location',
            field=models.ForeignKey(blank=True, help_text='Foreign key to Geog_Location table', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sample_metadata', to='polaaar.Geog_Location'),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='institutionID',
            field=models.CharField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/institutionID', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='investigation_type',
            field=models.CharField(blank=True, help_text='Nucleic Acid Sequence Report is the root element of all MIGS/MIMS compliant reports as standardized by Genomic Standards Consortium. This field is either eukaryote,bacteria,virus,plasmid,organelle, metagenome,mimarks-survey, or mimarks-specimen', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='isol_growth_condt',
            field=models.CharField(blank=True, help_text='Publication reference in the form of pubmed ID (pmid), digital object identifier (doi) or url for isolation and growth condition specifications of the organism/material', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='lib_size',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='Total number of clones in the library prepared for the project', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='license',
            field=models.CharField(blank=True, help_text='http://purl.org/dc/terms/license', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='locality',
            field=models.CharField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/locality', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='md_created_on',
            field=models.DateField(help_text='The date on which the resource created recommended best practice is to use an encoding scheme; such as ISO 8601:2004(E)'),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='metadata_creator',
            field=models.ForeignKey(help_text='The user who created this record', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='metadata_tag',
            field=models.CharField(blank=True, default='', help_text='A tag of metadata', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='nucl_acid_amp',
            field=models.CharField(blank=True, help_text='A link to a literature reference, electronic resource or a standard operating procedure (SOP), that describes the enzymatic amplification (PCR, TMA, NASBA) of specific nucleic acids', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='nucl_acid_ext',
            field=models.CharField(blank=True, help_text='A link to a literature reference, electronic resource or a standard operating procedure (SOP), that describes the material separation to recover the nucleic acid fraction from a sample', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='ref_biomaterial',
            field=models.CharField(blank=True, help_text='Primary publication if isolated before genome publication; otherwise, primary genome report', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='rel_to_oxygen',
            field=models.CharField(blank=True, help_text='Is this organism an aerobe, anaerobe? Please note that aerobic and anaerobic are valid descriptors for microbial environments', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='rightsHolder',
            field=models.CharField(blank=True, help_text='http://purl.org/dc/terms/rightsHolder', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='samp_collect_device',
            field=models.CharField(blank=True, help_text='The method or device employed for collecting the sample', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='samp_store_dur',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='duration for which sample was stored', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='samp_store_loc',
            field=models.CharField(blank=True, help_text='location at which sample was stored; usually name of a specific freezer/room', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='samp_store_temp',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='temperature at which sample was stored, e.g. -80 degree Celsius', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='samp_vol_we_dna_ext',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='volume (mL) or weight (g) of sample processed for DNA extraction', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='samplingProtocol',
            field=models.CharField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/samplingProtocol', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='source_mat_id',
            field=models.CharField(blank=True, help_text="A unique identifier assigned to a material sample (as defined by http://rs.tdwg.org/dwc/terms/materialSampleID, and as opposed to a particular digital record of a material sample) used for extracting nucleic acids, and subsequent sequencing. The identifier can refer either to the original material collected or to any derived sub-samples. The INSDC qualifiers /specimen_voucher, /bio_material, or /culture_collection may or may not share the same value as the source_mat_id field. For instance, the /specimen_voucher qualifier and source_mat_id may both contain 'UAM:Herps:14' , referring to both the specimen voucher and sampled tissue with the same identifier. However, the /culture_collection qualifier may refer to a value from an initial culture (e.g. ATCC:11775) while source_mat_id would refer to an identifier from some derived culture from which the nucleic acids were extracted (e.g. xatc123 or ark:/2154/R2).", max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='samplemetadata',
            name='submitted_to_insdc',
            field=models.BooleanField(blank=True, help_text='Depending on the study (large-scale e.g. done with next generation sequencing technology, or small-scale) sequences have to be submitted to SRA (Sequence Read Archive), DRA (DDBJ Read Archive) or via the classical Webin/Sequin systems to Genbank, ENA and DDBJ. Although this field is mandatory, it is meant as a self-test field, therefore it is not necessary to include this field in contextual data submitted to databases', null=True),
        ),
        migrations.AlterField(
            model_name='sampling_method',
            name='description',
            field=models.TextField(blank=True, help_text='a description of the sample as it was taken from the natural environment', null=True),
        ),
        migrations.AlterField(
            model_name='sampling_method',
            name='shortname',
            field=models.CharField(help_text='http://rs.tdwg.org/dwc/terms/measurementMethod', max_length=255),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='ASV_URL',
            field=models.URLField(blank=True, help_text='the url to the table with Operational Taxonomic Unit (OTU) or Alternative Sequence Variants (ASV) occurrences', null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='MID',
            field=models.CharField(blank=True, help_text='Molecular barcodes, called Multiplex Identifiers (MIDs), that are used to specifically tag unique samples in a sequencing run. Sequence should be reported in uppercase letters', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='event',
            field=models.ForeignKey(blank=True, help_text='Foreign key to Event table', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sequences', to='polaaar.Event'),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='primerName_forward',
            field=models.CharField(blank=True, help_text='http://data.ggbn.org/schemas/ggbn/terms/primerNameForward', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='primerName_reverse',
            field=models.CharField(blank=True, help_text='http://data.ggbn.org/schemas/ggbn/terms/primerNameReverse', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='primer_forward',
            field=models.CharField(blank=True, help_text='http://data.ggbn.org/schemas/ggbn/terms/primerSequenceForward', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='primer_reverse',
            field=models.CharField(blank=True, help_text='http://data.ggbn.org/schemas/ggbn/terms/primerSequenceReverse', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='run_type',
            field=models.CharField(blank=True, help_text='The type of sequencing run performed. E.g. Illumina MiSeq 250bp paired-end', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='seqData_accessionNumber',
            field=models.CharField(blank=True, help_text='An assocated INSDC GenBank accession number.', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='seqData_numberOfBases',
            field=models.IntegerField(blank=True, help_text='The number of bases predicted in a sequenced sample', null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='seqData_numberOfSequences',
            field=models.IntegerField(blank=True, help_text='the number of sequences in a sample or folder', null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='seqData_projectNumber',
            field=models.CharField(blank=True, help_text='An assocated INSDC BioProject number.', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='seqData_runNumber',
            field=models.CharField(blank=True, help_text='An assocated INSDC run accession number. (ERR number)', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='seqData_sampleNumber',
            field=models.CharField(blank=True, help_text='An assocated INSDC BioSample number.', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='seqData_url',
            field=models.URLField(blank=True, help_text='relevant electronic resources', null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='sequence_name',
            field=models.CharField(blank=True, help_text='The original sample name that can be used to identify the material taken in the field.', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='subspecf_gen_lin',
            field=models.CharField(blank=True, help_text='This should provide further information about the genetic distinctness of this lineage by recording additional information i.e biovar, serovar, serotype, biovar, or any relevant genetic typing schemes like Group I plasmid. It can also contain alternative taxonomic information', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='target_gene',
            field=models.CharField(blank=True, help_text='Targeted gene or locus name for marker gene studies', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='target_subfragment',
            field=models.CharField(blank=True, help_text='Name of subfragment of a gene or locus. Important to e.g. identify special regions on marker genes like V6 on 16S rRNA', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='sequences',
            name='type',
            field=models.CharField(blank=True, help_text='The type of study; either genomic; metagenomic; transcriptomic; metatranscriptomic; viral RNA; synthetic or other.', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='taxa',
            name='TaxonRank',
            field=models.CharField(blank=True, choices=[('superKingdom', 'superKingdom'), ('Kingdom', 'Kingdom'), ('SubKingdom', 'SubKingdom'), ('Phylum', 'Phylum'), ('SubPhylum', 'SubPhylum'), ('Class', 'Class'), ('SubClass', 'SubClass'), ('Order', 'Order'), ('SubOrder', 'SubOrder'), ('Family', 'Family'), ('SubFamily', 'SubFamily'), ('Genus', 'Genus'), ('SubGenus', 'SubGenus'), ('Species', 'Species'), ('SubSpecies', 'SubSpecies'), ('Strain', 'Strain')], help_text='http://rs.tdwg.org/dwc/terms/verbatimTaxonRank', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='taxa',
            name='name',
            field=models.CharField(blank=True, help_text='the name and subject or a record (line) in a table', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='taxa',
            name='taxonID',
            field=models.CharField(blank=True, help_text='http://rs.tdwg.org/dwc/terms/scientificNameID', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='units',
            name='html_tag',
            field=models.CharField(blank=True, help_text='http://rs.iobis.org/obis/terms/measurementUnitID', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='units',
            name='name',
            field=models.CharField(blank=True, help_text='the name and subject or a record (line) in a table', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='variable',
            name='method',
            field=models.ManyToManyField(blank=True, help_text='Method(s) associated with this record', to='polaaar.sampling_method'),
        ),
        migrations.AlterField(
            model_name='variable',
            name='name',
            field=models.CharField(blank=True, help_text='the name and subject or a record (line) in a table', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='variable',
            name='var_type',
            field=models.CharField(blank=True, choices=[('TXT', 'Text'), ('NUM', 'Numeric')], help_text='http://rs.tdwg.org/dwc/terms/measurementType', max_length=40, null=True),
        ),
        migrations.AlterField(
            model_name='variable',
            name='var_units',
            field=models.ManyToManyField(blank=True, help_text='Unit(s) associated with this record', to='polaaar.units'),
        ),
    ]
